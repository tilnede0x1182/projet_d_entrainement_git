
# ARBORESCENCE
#
/home/tilnede0x1182/code/tilnede0x1182/Personnel/2025/Entrainement/Git/Entrainement_1/projet_d_entrainement_git/Site_web/pose_questions_on_rails
├── app
│   ├── assets
│   │   ├── config
│   │   │   └── manifest.js
│   │   ├── images
│   │   └── stylesheets
│   │       └── application.css
│   ├── controllers
│   │   ├── accueil_controller.rb
│   │   ├── application_controller.rb
│   │   ├── concerns
│   │   ├── notions_controller.rb
│   │   ├── parties_controller.rb
│   │   └── scores_controller.rb
│   ├── helpers
│   │   └── application_helper.rb
│   ├── jobs
│   │   └── application_job.rb
│   ├── models
│   │   ├── application_record.rb
│   │   ├── concerns
│   │   ├── exercice.rb
│   │   ├── notion.rb
│   │   ├── partie.rb
│   │   ├── question.rb
│   │   └── reponse.rb
│   └── views
│       ├── accueil
│       │   └── index.html.erb
│       ├── layouts
│       │   └── application.html.erb
│       ├── notions
│       │   └── index.html.erb
│       ├── parties
│       │   ├── exercice.html.erb
│       │   ├── question.html.erb
│       │   ├── resultat.html.erb
│       │   └── sauvegardes.html.erb
│       └── scores
│           └── index.html.erb
├── bin
│   ├── bundle
│   ├── docker-entrypoint
│   ├── rails
│   ├── rake
│   └── setup
├── config
│   ├── application.rb
│   ├── boot.rb
│   ├── credentials.yml.enc
│   ├── database.yml
│   ├── environment.rb
│   ├── environments
│   │   ├── development.rb
│   │   ├── production.rb
│   │   └── test.rb
│   ├── initializers
│   │   ├── assets.rb
│   │   ├── content_security_policy.rb
│   │   ├── filter_parameter_logging.rb
│   │   ├── inflections.rb
│   │   └── permissions_policy.rb
│   ├── locales
│   │   └── en.yml
│   ├── master.key
│   ├── puma.rb
│   └── routes.rb
├── config.ru
├── db
│   ├── migrate
│   │   ├── 20250602084126_create_notions.rb
│   │   ├── 20250602084127_create_exercices.rb
│   │   ├── 20250602084128_create_questions.rb
│   │   ├── 20250602084129_create_reponses.rb
│   │   └── 20250602090617_create_parties.rb
│   ├── schema.rb
│   └── seeds.rb
├── fichier
├── Gemfile
├── Gemfile.lock
├── lib
│   ├── assets
│   └── tasks
├── projet.txt
├── public
│   ├── 404.html
│   ├── 422.html
│   ├── 500.html
│   ├── apple-touch-icon.png
│   ├── apple-touch-icon-precomposed.png
│   ├── favicon.ico
│   └── robots.txt
├── Rakefile
└── README.md

29 directories, 66 files

# CONFIG
#
## Gemfile

source "https://rubygems.org"

ruby "3.3.5"

# ------------------------------------------
# Core Rails & Utilities
# ------------------------------------------
gem "rails", "~> 7.1.5", ">= 7.1.5.1"     # Framework principal Rails 7
gem "puma", ">= 5.0"                       # Serveur web performant pour Rails
gem "bootsnap", require: false             # Cache pour accélérer le démarrage de Rails

# ------------------------------------------
# Base de données
# ------------------------------------------
gem "sqlite3", ">= 1.4"                    # Base de données légère SQLite3 pour dev/test

# ------------------------------------------
# Assets & APIs
# ------------------------------------------
gem "sprockets-rails"                      # Pipeline d’assets Rails classique
gem "jbuilder"                             # Génération de JSON pour APIs

# ------------------------------------------
# Compatibilité et OS spécifiques
# ------------------------------------------
gem "tzinfo-data", platforms: %i[ windows jruby ] # Fichiers de fuseaux horaires pour Windows/JRuby

# ------------------------------------------
# Dépendances Ruby standard
# ------------------------------------------
gem "ostruct"                              # Support OpenStruct requis pour Ruby >= 3.3

# ------------------------------------------
# Groupe développement & test
# ------------------------------------------
group :development, :test do
  gem "debug", platforms: %i[ mri windows ] # Débogage interactif
end

group :development do
  gem "web-console"                        # Console interactive dans le navigateur
end


## Gemfile.lock

GEM
  remote: https://rubygems.org/
  specs:
    actioncable (7.1.5.1)
      actionpack (= 7.1.5.1)
      activesupport (= 7.1.5.1)
      nio4r (~> 2.0)
      websocket-driver (>= 0.6.1)
      zeitwerk (~> 2.6)
    actionmailbox (7.1.5.1)
      actionpack (= 7.1.5.1)
      activejob (= 7.1.5.1)
      activerecord (= 7.1.5.1)
      activestorage (= 7.1.5.1)
      activesupport (= 7.1.5.1)
      mail (>= 2.7.1)
      net-imap
      net-pop
      net-smtp
    actionmailer (7.1.5.1)
      actionpack (= 7.1.5.1)
      actionview (= 7.1.5.1)
      activejob (= 7.1.5.1)
      activesupport (= 7.1.5.1)
      mail (~> 2.5, >= 2.5.4)
      net-imap
      net-pop
      net-smtp
      rails-dom-testing (~> 2.2)
    actionpack (7.1.5.1)
      actionview (= 7.1.5.1)
      activesupport (= 7.1.5.1)
      nokogiri (>= 1.8.5)
      racc
      rack (>= 2.2.4)
      rack-session (>= 1.0.1)
      rack-test (>= 0.6.3)
      rails-dom-testing (~> 2.2)
      rails-html-sanitizer (~> 1.6)
    actiontext (7.1.5.1)
      actionpack (= 7.1.5.1)
      activerecord (= 7.1.5.1)
      activestorage (= 7.1.5.1)
      activesupport (= 7.1.5.1)
      globalid (>= 0.6.0)
      nokogiri (>= 1.8.5)
    actionview (7.1.5.1)
      activesupport (= 7.1.5.1)
      builder (~> 3.1)
      erubi (~> 1.11)
      rails-dom-testing (~> 2.2)
      rails-html-sanitizer (~> 1.6)
    activejob (7.1.5.1)
      activesupport (= 7.1.5.1)
      globalid (>= 0.3.6)
    activemodel (7.1.5.1)
      activesupport (= 7.1.5.1)
    activerecord (7.1.5.1)
      activemodel (= 7.1.5.1)
      activesupport (= 7.1.5.1)
      timeout (>= 0.4.0)
    activestorage (7.1.5.1)
      actionpack (= 7.1.5.1)
      activejob (= 7.1.5.1)
      activerecord (= 7.1.5.1)
      activesupport (= 7.1.5.1)
      marcel (~> 1.0)
    activesupport (7.1.5.1)
      base64
      benchmark (>= 0.3)
      bigdecimal
      concurrent-ruby (~> 1.0, >= 1.0.2)
      connection_pool (>= 2.2.5)
      drb
      i18n (>= 1.6, < 2)
      logger (>= 1.4.2)
      minitest (>= 5.1)
      mutex_m
      securerandom (>= 0.3)
      tzinfo (~> 2.0)
    base64 (0.3.0)
    benchmark (0.4.1)
    bigdecimal (3.2.1)
    bindex (0.8.1)
    bootsnap (1.18.6)
      msgpack (~> 1.2)
    builder (3.3.0)
    concurrent-ruby (1.3.5)
    connection_pool (2.5.3)
    crass (1.0.6)
    date (3.4.1)
    debug (1.10.0)
      irb (~> 1.10)
      reline (>= 0.3.8)
    drb (2.2.3)
    erb (5.0.1)
    erubi (1.13.1)
    globalid (1.2.1)
      activesupport (>= 6.1)
    i18n (1.14.7)
      concurrent-ruby (~> 1.0)
    io-console (0.8.0)
    irb (1.15.2)
      pp (>= 0.6.0)
      rdoc (>= 4.0.0)
      reline (>= 0.4.2)
    jbuilder (2.13.0)
      actionview (>= 5.0.0)
      activesupport (>= 5.0.0)
    logger (1.7.0)
    loofah (2.24.1)
      crass (~> 1.0.2)
      nokogiri (>= 1.12.0)
    mail (2.8.1)
      mini_mime (>= 0.1.1)
      net-imap
      net-pop
      net-smtp
    marcel (1.0.4)
    mini_mime (1.1.5)
    minitest (5.25.5)
    msgpack (1.8.0)
    mutex_m (0.3.0)
    net-imap (0.5.8)
      date
      net-protocol
    net-pop (0.1.2)
      net-protocol
    net-protocol (0.2.2)
      timeout
    net-smtp (0.5.1)
      net-protocol
    nio4r (2.7.4)
    nokogiri (1.18.8-aarch64-linux-gnu)
      racc (~> 1.4)
    nokogiri (1.18.8-aarch64-linux-musl)
      racc (~> 1.4)
    nokogiri (1.18.8-arm-linux-gnu)
      racc (~> 1.4)
    nokogiri (1.18.8-arm-linux-musl)
      racc (~> 1.4)
    nokogiri (1.18.8-arm64-darwin)
      racc (~> 1.4)
    nokogiri (1.18.8-x86_64-darwin)
      racc (~> 1.4)
    nokogiri (1.18.8-x86_64-linux-gnu)
      racc (~> 1.4)
    nokogiri (1.18.8-x86_64-linux-musl)
      racc (~> 1.4)
    ostruct (0.6.1)
    pp (0.6.2)
      prettyprint
    prettyprint (0.2.0)
    psych (5.2.6)
      date
      stringio
    puma (6.6.0)
      nio4r (~> 2.0)
    racc (1.8.1)
    rack (3.1.15)
    rack-session (2.1.1)
      base64 (>= 0.1.0)
      rack (>= 3.0.0)
    rack-test (2.2.0)
      rack (>= 1.3)
    rackup (2.2.1)
      rack (>= 3)
    rails (7.1.5.1)
      actioncable (= 7.1.5.1)
      actionmailbox (= 7.1.5.1)
      actionmailer (= 7.1.5.1)
      actionpack (= 7.1.5.1)
      actiontext (= 7.1.5.1)
      actionview (= 7.1.5.1)
      activejob (= 7.1.5.1)
      activemodel (= 7.1.5.1)
      activerecord (= 7.1.5.1)
      activestorage (= 7.1.5.1)
      activesupport (= 7.1.5.1)
      bundler (>= 1.15.0)
      railties (= 7.1.5.1)
    rails-dom-testing (2.3.0)
      activesupport (>= 5.0.0)
      minitest
      nokogiri (>= 1.6)
    rails-html-sanitizer (1.6.2)
      loofah (~> 2.21)
      nokogiri (>= 1.15.7, != 1.16.7, != 1.16.6, != 1.16.5, != 1.16.4, != 1.16.3, != 1.16.2, != 1.16.1, != 1.16.0.rc1, != 1.16.0)
    railties (7.1.5.1)
      actionpack (= 7.1.5.1)
      activesupport (= 7.1.5.1)
      irb
      rackup (>= 1.0.0)
      rake (>= 12.2)
      thor (~> 1.0, >= 1.2.2)
      zeitwerk (~> 2.6)
    rake (13.3.0)
    rdoc (6.14.0)
      erb
      psych (>= 4.0.0)
    reline (0.6.1)
      io-console (~> 0.5)
    securerandom (0.4.1)
    sprockets (4.2.2)
      concurrent-ruby (~> 1.0)
      logger
      rack (>= 2.2.4, < 4)
    sprockets-rails (3.5.2)
      actionpack (>= 6.1)
      activesupport (>= 6.1)
      sprockets (>= 3.0.0)
    sqlite3 (2.6.0-aarch64-linux-gnu)
    sqlite3 (2.6.0-aarch64-linux-musl)
    sqlite3 (2.6.0-arm-linux-gnu)
    sqlite3 (2.6.0-arm-linux-musl)
    sqlite3 (2.6.0-arm64-darwin)
    sqlite3 (2.6.0-x86_64-darwin)
    sqlite3 (2.6.0-x86_64-linux-gnu)
    sqlite3 (2.6.0-x86_64-linux-musl)
    stringio (3.1.7)
    thor (1.3.2)
    timeout (0.4.3)
    tzinfo (2.0.6)
      concurrent-ruby (~> 1.0)
    web-console (4.2.1)
      actionview (>= 6.0.0)
      activemodel (>= 6.0.0)
      bindex (>= 0.4.0)
      railties (>= 6.0.0)
    websocket-driver (0.8.0)
      base64
      websocket-extensions (>= 0.1.0)
    websocket-extensions (0.1.5)
    zeitwerk (2.7.3)

PLATFORMS
  aarch64-linux-gnu
  aarch64-linux-musl
  arm-linux-gnu
  arm-linux-musl
  arm64-darwin
  x86_64-darwin
  x86_64-linux
  x86_64-linux-gnu
  x86_64-linux-musl

DEPENDENCIES
  bootsnap
  debug
  jbuilder
  ostruct
  puma (>= 5.0)
  rails (~> 7.1.5, >= 7.1.5.1)
  sprockets-rails
  sqlite3 (>= 1.4)
  tzinfo-data
  web-console

RUBY VERSION
   ruby 3.3.5p100

BUNDLED WITH
   2.6.7


## config/database.yml

# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  <<: *default
  database: storage/development.sqlite3

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: storage/test.sqlite3

production:
  <<: *default
  database: storage/production.sqlite3


## config/routes.rb

Rails.application.routes.draw do
  # Define your application routes per the DSL in https://guides.rubyonrails.org/routing.html

  # Reveal health status on /up that returns 200 if the app boots with no exceptions, otherwise 500.
  # Can be used by load balancers and uptime monitors to verify that the app is live.
  get "up" => "rails/health#show", as: :rails_health_check

  # Defines the root path route ("/")
  # root "posts#index"

	# Accueil
	root "accueil#index"

	# Notions, affichage unique (tout sur /notions)
	get "/notions", to: "notions#index", as: :notions

	# Démarrage nouvelle partie (création à partir d'une notion)
	post "/parties", to: "parties#create", as: :parties

	# Reprise de partie (liste des sauvegardes)
	get "/parties/sauvegardes", to: "parties#sauvegardes", as: :sauvegardes_parties

	# Jeu : affichage exercice
	get "/parties/:id/exercice", to: "parties#exercice", as: :partie_exercice

	# Jeu : affichage question
	get "/parties/:id/exercice/question/:question_id", to: "parties#question", as: :partie_question
	post "/parties/:id/exercice/question/:question_id", to: "parties#repondre", as: :repondre_partie_question

	# Résultat
	get "/parties/:id/resultat", to: "parties#resultat", as: :resultat_partie

	# Scores (parties finies)
	get "/scores", to: "scores#index", as: :scores
end



# CONTROLEURS
#
## app/controllers/notions_controller.rb

class NotionsController < ApplicationController
	def index
		@notions = Notion.includes(:exercices)
	end
end


## app/controllers/parties_controller.rb

class PartiesController < ApplicationController
	def create
		notion = Notion.find(params[:notion_id])
		partie = Partie.create!(
			notion: notion,
			timestamp: Time.now.strftime('%Y-%m-%d_%H-%M-%S'),
			score: nil,
			finished: false
		)
		redirect_to partie_exercice_path(partie)
	end

	def exercice
		@partie = Partie.find(params[:id])
		@notion = @partie.notion
		@exercice = @notion.exercices.order(:numero).first
		if @exercice.nil?
			redirect_to notions_path, alert: "Aucun exercice trouvé."
		else
			first_question = @exercice.questions.order(:numero).first
			redirect_to partie_question_path(@partie, question_id: first_question.id)
		end
	end

	def question
		@partie = Partie.find(params[:id])
		@question = Question.find(params[:question_id])
		@exercice = @question.exercice
		@notion = @partie.notion

		# Récupérer le numéro de l'exercice et de la question pour affichage
		@numero_exercice = @exercice.numero
		@numero_question = @question.numero
	end

	def repondre
		@partie = Partie.find(params[:id])
		@question = Question.find(params[:question_id])
		@exercice = @question.exercice

		# Sauvegarder la réponse
		Reponse.create!(
			partie: @partie,
			ex_num: @exercice.numero,
			q_num: @question.numero,
			rep: params[:reponse]
		)

		# Trouver la question suivante dans l'exercice
		questions_ordered = @exercice.questions.order(:numero).to_a
		current_index = questions_ordered.index(@question)
		next_question = questions_ordered[current_index + 1]

		if next_question
			redirect_to partie_question_path(@partie, question_id: next_question.id)
		else
			# Pas de question suivante dans cet exercice, passer à l'exercice suivant
			exercices_ordered = @partie.notion.exercices.order(:numero).to_a
			current_ex_index = exercices_ordered.index(@exercice)
			next_exercice = exercices_ordered[current_ex_index + 1]

			if next_exercice
				# rediriger vers la première question du prochain exercice
				first_question = next_exercice.questions.order(:numero).first
				redirect_to partie_question_path(@partie, question_id: first_question.id)
			else
				# Dernier exercice terminé, calculer score, marquer fin de partie et rediriger vers résultat
				total_questions = Reponse.where(partie: @partie).count
				correct_answers = 0
				@partie.notion.exercices.each do |ex|
					ex.questions.each do |q|
						rep = Reponse.find_by(partie: @partie, ex_num: ex.numero, q_num: q.numero)
						correct_answers += 1 if rep && rep.rep == q.reponse
					end
				end
				@partie.update(score: "#{correct_answers}/#{total_questions}", finished: true)
				redirect_to resultat_partie_path(@partie)
			end
		end
	end

	def resultat
		@partie = Partie.find(params[:id])
		@notion = @partie.notion
		reponses = @partie.reponses

		corrections = []
		score = 0

		@notion.exercices.order(:numero).each do |ex|
			ex.questions.order(:numero).each do |q|
				user_rep = reponses.find_by(ex_num: ex.numero, q_num: q.numero)
				rep_utilisateur = user_rep&.rep || "-"
				correct = (rep_utilisateur == q.reponse)
				score += 1 if correct
				corrections << {
					situation: ex.situation,
					intitule: q.intitule,
					reponse_utilisateur: rep_utilisateur,
					texte_reponse_utilisateur: q.choix[rep_utilisateur],
					reponse_attendue: q.reponse,
					texte_bonne_reponse: q.choix[q.reponse],
					correct: correct
				}
			end
		end

		@score = "#{score}/#{corrections.size}"
		@corrections = corrections
		@partie.update(score: @score)
	end

	def sauvegardes
		@sauvegardes = Partie.where(finished: false)
	end
end


## app/controllers/scores_controller.rb

class ScoresController < ApplicationController
	def index
		@parties = Partie.where(finished: true).order(created_at: :desc)
	end
end


## app/controllers/accueil_controller.rb

class AccueilController < ApplicationController
	def index
	end
end


## app/controllers/application_controller.rb

class ApplicationController < ActionController::Base
end



# MODELES
#
## app/models/notion.rb

class Notion < ApplicationRecord
	has_many :exercices, class_name: 'Exercice'
end


## app/models/partie.rb

class Partie < ApplicationRecord
	belongs_to :notion
	has_many :reponses
end


## app/models/exercice.rb

class Exercice < ApplicationRecord
	belongs_to :notion
	has_many :questions
end


## app/models/reponse.rb

class Reponse < ApplicationRecord
  belongs_to :partie
end


## app/models/application_record.rb

class ApplicationRecord < ActiveRecord::Base
  primary_abstract_class
end


## app/models/question.rb

class Question < ApplicationRecord
	belongs_to :exercice
end



# VUES
#
## app/views/scores/index.html.erb

<div class="scores-list">
	<h2>Scores</h2>
	<% if @parties.any? %>
		<table>
			<tr>
				<th>Date</th>
				<th>Notion</th>
				<th>Score</th>
			</tr>
			<% @parties.each do |partie| %>
				<tr>
					<td><%= partie.created_at.strftime("%d/%m/%Y %H:%M") %></td>
					<td><%= partie.notion.notion %></td>
					<td><%= partie.score %></td>
				</tr>
			<% end %>
		</table>
	<% else %>
		<p>Aucun score enregistré.</p>
	<% end %>
	<%= link_to "Accueil", root_path, class: "btn-main" %>
</div>


## app/views/layouts/application.html.erb

<!DOCTYPE html>
<html>
  <head>
    <title>PoseQuestionsOnRails</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= stylesheet_link_tag "application" %>
		<!-- Import Bootstrap (CDN) -->
  	# <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  </head>

  <body>
    <%= yield %>
  </body>
</html>


## app/views/parties/question.html.erb

<div class="question-card">
	<h2>Exercice n°<%= @numero_exercice %> - Question n°<%= @numero_question %></h2>
	<h3>Situation</h3>
	<p class="situation"><%= @exercice.situation %></p>
	<div class="mini-court"><%= @exercice.mini_court %></div>
	<h3 class="question-intitule"><%= @question.intitule %></h3>
	<%= form_with url: repondre_partie_question_path(@partie, question_id: @question.id), method: :post, local: true do |f| %>
		<div class="choix-list">
			<% @question.choix.each do |cle, val| %>
				<div class="choix-item">
					<%= radio_button_tag :reponse, cle, false, id: "choix_#{cle}" %>
					<label for="choix_<%= cle %>"><%= "#{cle.upcase} : #{val}" %></label>
				</div>
			<% end %>
		</div>
		<div>
			<%= f.submit "Valider", class: "btn-main" %>
		</div>
	<% end %>
</div>


## app/views/parties/sauvegardes.html.erb

<div class="sauvegardes-list">
	<h2>Parties sauvegardées</h2>
	<% if @sauvegardes.any? %>
		<ul>
			<% @sauvegardes.each do |partie| %>
				<li>
					<span><b>Notion :</b> <%= partie.notion.notion %></span>
					<span><b>Créée le :</b> <%= partie.created_at.strftime("%d/%m/%Y %H:%M") %></span>
					<%= link_to "Reprendre", partie_exercice_path(partie), class: "btn-main" %>
				</li>
			<% end %>
		</ul>
	<% else %>
		<p>Aucune partie sauvegardée.</p>
	<% end %>
	<%= link_to "Accueil", root_path, class: "btn-main" %>
</div>


## app/views/parties/exercice.html.erb

<div class="exercice-card">
	<h2>Mini-cours</h2>
	<p class="mini-court"><%= @exercice.mini_court %></p>
	<div class="situation-block">
		<h3>Situation</h3>
		<p class="situation"><%= @exercice.situation %></p>
	</div>
	<%= link_to "Commencer les questions", partie_question_path(@partie, question_id: @exercice.questions.order(:numero).first.id), class: "btn-main" %>
</div>


## app/views/parties/resultat.html.erb

<div class="resultat-card">
	<h2>Votre score : <%= @score %></h2>
	<h3>Correction détaillée</h3>
	<% @corrections.each do |corr| %>
		<div class="correction-item">
			<div class="situation"><b>Situation :</b> <%= corr[:situation] %></div>
			<div class="question"><b>Question :</b> <%= corr[:intitule] %></div>
			<div>
				<b>Votre réponse :</b> <%= corr[:reponse_utilisateur].upcase %> - <%= corr[:texte_reponse_utilisateur] %><br>
				<b>Bonne réponse :</b> <%= corr[:reponse_attendue].upcase %> - <%= corr[:texte_bonne_reponse] %>
			</div>
			<div>
				<% if corr[:correct] %>
					<span style="color:#0c0;">✔ Bonne réponse</span>
				<% else %>
					<span style="color:#e00;">✘ Mauvaise réponse</span>
				<% end %>
			</div>
		</div>
	<% end %>
	<%= link_to "Accueil", root_path, class: "btn-main" %>
</div>


## app/views/notions/index.html.erb

<div class="notions-list">
	<h2 class="title">Choisissez une notion</h2>
	<ul>
		<% @notions.each do |notion| %>
			<li class="notion-card">
				<div>
					<span class="notion-title"><%= notion.notion %></span>
					<span class="notion-niveau">Niveau <%= notion.niveau %></span>
					<span class="notion-nbex"><%= pluralize(notion.exercices.size, "exercice") %></span>
				</div>
				<%= button_to "Démarrer", parties_path(notion_id: notion.id), method: :post, class: "btn-main" %>
			</li>
		<% end %>
	</ul>
</div>


## app/views/accueil/index.html.erb

<div class="main-menu">
	<h1 class="title">Entraînement Git</h1>
	<div class="menu-btns">
		<%= link_to "▶ Jouer", notions_path, class: "btn-main" %>
		<%= link_to "⏸ Parties sauvegardées", sauvegardes_parties_path, class: "btn-main" %>
		<%= link_to "🏆 Scores", scores_path, class: "btn-main" %>
	</div>
</div>



# ROUTES
#
## config/routes.rb

Rails.application.routes.draw do
  # Define your application routes per the DSL in https://guides.rubyonrails.org/routing.html

  # Reveal health status on /up that returns 200 if the app boots with no exceptions, otherwise 500.
  # Can be used by load balancers and uptime monitors to verify that the app is live.
  get "up" => "rails/health#show", as: :rails_health_check

  # Defines the root path route ("/")
  # root "posts#index"

	# Accueil
	root "accueil#index"

	# Notions, affichage unique (tout sur /notions)
	get "/notions", to: "notions#index", as: :notions

	# Démarrage nouvelle partie (création à partir d'une notion)
	post "/parties", to: "parties#create", as: :parties

	# Reprise de partie (liste des sauvegardes)
	get "/parties/sauvegardes", to: "parties#sauvegardes", as: :sauvegardes_parties

	# Jeu : affichage exercice
	get "/parties/:id/exercice", to: "parties#exercice", as: :partie_exercice

	# Jeu : affichage question
	get "/parties/:id/exercice/question/:question_id", to: "parties#question", as: :partie_question
	post "/parties/:id/exercice/question/:question_id", to: "parties#repondre", as: :repondre_partie_question

	# Résultat
	get "/parties/:id/resultat", to: "parties#resultat", as: :resultat_partie

	# Scores (parties finies)
	get "/scores", to: "scores#index", as: :scores
end



# MIGRATIONS
#
## db/migrate/20250602084126_create_notions.rb

class CreateNotions < ActiveRecord::Migration[7.1]
  def change
    create_table :notions do |t|
      t.integer :numero
      t.string :notion
      t.integer :niveau

      t.timestamps
    end
  end
end


## db/migrate/20250602090617_create_parties.rb

class CreateParties < ActiveRecord::Migration[7.1]
  def change
    create_table :parties do |t|
      t.string :timestamp
      t.string :score
      t.boolean :finished
      t.references :notion, null: false, foreign_key: true

      t.timestamps
    end
  end
end


## db/migrate/20250602084129_create_reponses.rb

class CreateReponses < ActiveRecord::Migration[7.1]
  def change
    create_table :reponses do |t|
      t.integer :ex_num
      t.integer :q_num
      t.string :rep
      t.references :partie, null: false, foreign_key: true

      t.timestamps
    end
  end
end


## db/migrate/20250602084128_create_questions.rb

class CreateQuestions < ActiveRecord::Migration[7.1]
  def change
    create_table :questions do |t|
      t.integer :numero
      t.string :intitule
      t.json :choix
      t.string :reponse
      t.references :exercice, null: false, foreign_key: true

      t.timestamps
    end
  end
end


## db/migrate/20250602084127_create_exercices.rb

class CreateExercices < ActiveRecord::Migration[7.1]
  def change
    create_table :exercices do |t|
      t.integer :numero
      t.text :mini_court
      t.text :situation
      t.references :notion, null: false, foreign_key: true

      t.timestamps
    end
  end
end



# JOBS
#
## app/jobs/application_job.rb

class ApplicationJob < ActiveJob::Base
  # Automatically retry jobs that encountered a deadlock
  # retry_on ActiveRecord::Deadlocked

  # Most jobs are safe to ignore if the underlying records are no longer available
  # discard_on ActiveJob::DeserializationError
end



# CSS_MAISON
#
## app/assets/stylesheets/application.css

/* ===========================
   🌐 Import de polices
   =========================== */
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&family=Roboto+Mono:wght@400&display=swap');

/* ===========================
   🖋️ Typographie et fond global
   Style imprimé : fond blanc, texte sombre, interlignage aéré
   =========================== */
body {
    background: #fafafa; /* fond très clair */
    color: #333;          /* texte principal sombre */
    font-family: 'Roboto', Arial, sans-serif;
    margin: 0; padding: 0;
    line-height: 1.6;
}
.title {
    font-family: 'Roboto', Arial, sans-serif;
    font-size: 2em;
    font-weight: 500;
    color: #222;
    margin-bottom: 1em;
    border-bottom: 1px solid #ddd; /* séparation discrète */
    padding-bottom: 0.2em;
}

/* ===========================
   📦 Conteneurs & cartes
   Style épuré : fond blanc, bord gris clair, coins légèrement arrondis
   =========================== */
.main-menu,
.notions-list,
.exercice-card,
.question-card,
.resultat-card,
.sauvegardes-list,
.scores-list {
    max-width: 650px;
    margin: 2em auto;
    background: #fff;
    border: 1px solid #e0e0e0;
    border-radius: 6px;
    padding: 2em 1.5em;
}

/* ===========================
   📋 Listes & disposition flex
   =========================== */
.menu-btns,
.notions-list ul {
    display: flex;
    flex-direction: column;
    gap: 0.8em;
}
.choix-list {
    margin-bottom: 1em;
}
.choix-item {
    margin-bottom: 0.5em;
}
.sauvegardes-list ul {
    list-style: none;
    padding: 0;
}

/* ===========================
   🔘 Boutons principaux
   Style académique : fond gris clair, bord fin, transition douce
   =========================== */
.btn-main {
    font-size: 1em;
    padding: 0.6em 1.2em;
    background: #e8e8e8;
    border: 1px solid #ccc;
    border-radius: 4px;
    color: #222;
    font-weight: 500;
    cursor: pointer;
    transition: background 0.15s, border-color 0.15s;
    text-align: center;
}
.btn-main:hover {
    background: #ddd;
    border-color: #bbb;
}

/* ===========================
   📑 Cartes "notion"
   Style sobre : liste simplifiée, séparateurs discrets
   =========================== */
.notion-card {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1em;
    padding: 0.8em 0;
    border-bottom: 1px solid #eee;
}
.notion-title {
    font-size: 1em;
    font-weight: 500;
    color: #222;
}
.notion-niveau {
    background: #f0f0f0;
    border-radius: 4px;
    padding: 2px 6px;
    font-size: 0.85em;
    color: #555;
}
.notion-nbex {
    color: #007acc;
    margin-left: 0.5em;
}

/* ===========================
   ✍️ Texte "mini-court"
   =========================== */
.mini-court {
    font-size: 1em;
    color: #444;
    margin-bottom: 1.2em;
}

/* ===========================
   📖 Bloc "situation"
   =========================== */
.situation-block {
    background: #fdfdfd;
    border: 1px solid #eee;
    border-radius: 6px;
    padding: 1em;
    margin-bottom: 1em;
}
.situation {
    font-size: 0.95em;
    color: #555;
}

/* ===========================
   🏆 Tableau des scores
   Style de tableau académique : bord fin, fond clair
   =========================== */
.scores-list table {
    width: 100%;
    margin: 1.5em 0 1em;
    border-collapse: collapse;
    background: #fff;
}
.scores-list th,
.scores-list td {
    border-bottom: 1px solid #eee;
    padding: 0.8em 0.5em;
    text-align: left;
    font-size: 0.95em;
}
.scores-list th {
    background: #f5f5f5;
    color: #222;
    font-weight: 500;
}
.scores-list tr:last-child td {
    border-bottom: none;
}

/* ===========================
   💾 Liste des sauvegardes
   =========================== */
.sauvegardes-list li {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 0.8em;
    background: #fff;
    border: 1px solid #eee;
    padding: 0.8em;
    border-radius: 6px;
}
.sauvegardes-list span {
    margin-right: 1em;
    color: #333;
}

/* ===========================
   🎨 Correction & résultats
   Mise en évidence subtile sans rupture visuelle
   =========================== */
.resultat-card .correction-item {
    margin: 1.2em 0 1.5em;
    padding: 0.8em;
    border-left: 4px solid #007acc;
    background: #f9f9f9;
    border-radius: 4px;
    font-size: 0.95em;
    color: #333;
}

/* ===========================
   🖥️ Code (pour rendus type "Code Academy")
   Utilisation de police monospace pour les blocs de code
   =========================== */
pre, code {
    font-family: 'Roboto Mono', monospace;
    background: #f5f5f5;
    border: 1px solid #e5e5e5;
    border-radius: 4px;
    padding: 0.5em;
    overflow-x: auto;
    font-size: 0.9em;
    line-height: 1.4;
}



# STATISTIQUES
#
     21 ## app
      3 ## config
      5 ## db
      1 ## Gemfile
      1 ## Gemfile.lock
